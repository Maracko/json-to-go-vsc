{
  "name": "json-to-go",
  "author": {
    "name": "Mario Petričko",
    "email": "mario@petricko.dev"
  },
  "publisher": "maracko",
  "repository": "https://github.com/maracko/json-to-go-vsc",
  "displayName": "JSON to Go",
  "description": "Convert JSON data to Go type definition",
  "version": "1.4.0",
  "engines": {
    "vscode": "^1.80.0",
    "node": ">=17.0.0"
  },
  "categories": [
    "Formatters",
    "Programming Languages",
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./src/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "json-to-go.convert",
        "title": "JSON to Go: Convert"
      },
      {
        "command": "json-to-go.convertFresh",
        "title": "JSON to Go: Convert with fresh IO settings, and don't persist them"
      },
      {
        "command": "json-to-go.openSettings",
        "title": "JSON to Go: Open Settings"
      },
      {
        "command": "json-to-go.resetAllSettings",
        "title": "JSON to Go: Reset All Settings"
      }
    ],
    "configuration": {
      "title": "JSON to Go",
      "properties": {
        "json-to-go.addExamples": {
          "type": "boolean",
          "default": false,
          "description": "When enabled will add example tags to struct fields"
        },
        "json-to-go.allOmitEmpty": {
          "type": "boolean",
          "default": false,
          "description": "When enabled will add omitempty to all JSON tags"
        },
        "json-to-go.autoSelectTypeName": {
          "type": "boolean",
          "default": true,
          "description": "When enabled and output is temporary file automatically selects the type name after converting"
        },
        "json-to-go.generatedTypeName": {
          "type": "string",
          "default": "AutoGenerated",
          "description": "Type name in the generated output"
        },
        "json-to-go.inlineTypeDefinitions": {
          "type": "boolean",
          "default": false,
          "description": "When enabled nested structs are defined inline, otherwise below the main struct"
        },
        "json-to-go.saveConversions": {
          "type": "boolean",
          "default": false,
          "description": "When enabled conversions will be saved in `$HOME/.json-to-go-history` and grouped by workspace folder"
        },
        "json-to-go.io.input": {
          "type": "string",
          "default": "ask me every time",
          "description": "Source of JSON data to convert. Can be clipboard or current selection/file",
          "enum": [
            "clipboard",
            "selection",
            "current file",
            "ask me every time"
          ],
          "enumDescriptions": [
            "JSON data is copied from clipboard and converted",
            "JSON data is copied from active editor selection and converted",
            "User is asked every time to select source of JSON data"
          ]
        },
        "json-to-go.io.output": {
          "type": "string",
          "default": "ask me every time",
          "description": "Destination of struct definition string. Can be either clipboard, inserted after cursor position in active editor or temporary file",
          "enum": [
            "clipboard",
            "cursor position",
            "temporary file",
            "ask me every time"
          ],
          "enumDescriptions": [
            "Outputs struct to clipboard",
            "Outputs struct after cursor position in active editor",
            "Opens temporary file with struct definition and selects name of the struct",
            "User is asked every time to select destination of struct definition"
          ]
        },
        "json-to-go.pasteIntegration.promptForTypeName": {
          "type": "boolean",
          "default": true,
          "description": "When enabled, the user will be prompted to enter a name for the struct when converting pasted data. If false the general configured type name will be used"
        },
        "json-to-go.pasteIntegration.supportedLanguages": {
          "type": "array",
          "default": [
            "go"
          ],
          "description": "Editor languages inside which to intercept paste events. Only Go by default. Set to empty array to disable. You can also include \"*\" for all languages but it is not recommended."
        }
      }
    }
  },
  "jest": {
    "testPathIgnorePatterns": [
      "./node_modules/*",
      "./json-to-go.js"
    ]
  },
  "scripts": {
    "lint": "eslint ./src",
    "test": "jest",
    "build": "vsce package",
    "publish-marketplace": "vsce publish",
    "prepare": "husky"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/jest": "^29.5.12",
    "@types/node": "^12.11.7",
    "@types/vscode": "^1.55.0",
    "@vscode/vsce": "^2.24.0",
    "eslint": "^8.52.0",
    "eslint-config-google": "^0.14.0",
    "eslint-plugin-jest": "^27.6.3",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-react": "^7.33.2",
    "glob": "^7.1.6",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "prettier": "^3.1.0",
    "prettier-eslint": "^16.1.2",
    "typescript": "^4.1.3"
  },
  "icon": "icon.png",
  "packageManager": "yarn@1.22.22+sha512.a6b2f7906b721bba3d67d4aff083df04dad64c399707841b7acf00f6b133b7ac24255f2652fa22ae3534329dc6180534e98d17432037ff6fd140556e2bb3137e",
  "type": "commonjs"
}
